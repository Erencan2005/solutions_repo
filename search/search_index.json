{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Investigating the Range as a Function of the Angle of Projection 1. Theoretical Foundation Governing Equations of Motion The motion of a projectile can be described by the following differential equations derived from Newton's second law: Horizontal Motion (x-direction): [ \\frac{d^2x}{dt^2} = 0 ] This implies that the horizontal velocity \\( v_x \\) is constant: [ v_x = v_0 \\cos(\\theta) ] where \\( v_0 \\) is the initial velocity and \\( \\theta \\) is the angle of projection. Vertical Motion (y-direction): [ \\frac{d^2y}{dt^2} = -g ] where \\( g \\) is the acceleration due to gravity. The vertical velocity \\( v_y \\) is given by: [ v_y = v_0 \\sin(\\theta) - gt ] The position of the projectile as a function of time \\( t \\) is: [ x(t) = v_0 \\cos(\\theta) \\cdot t ] [ y(t) = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2}gt^2 ] Family of Solutions The solutions to these equations depend on the initial conditions: - Initial Velocity ( \\( v_0 \\) ) : Affects the magnitude of the velocity components. - Angle of Projection ( \\( \\theta \\) ) : Determines the direction of the initial velocity. - Gravitational Acceleration ( \\( g \\) ) : Influences the vertical motion. Varying these parameters leads to a family of parabolic trajectories. 2. Analysis of the Range Horizontal Range The horizontal range \\( R \\) is the distance the projectile travels before hitting the ground. It can be derived by setting \\( y(t) = 0 \\) and solving for \\( t \\) : [ 0 = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2}gt^2 ] [ t = \\frac{2v_0 \\sin(\\theta)}{g} ] Substituting this into the equation for \\( x(t) \\) : [ R = v_0 \\cos(\\theta) \\cdot \\frac{2v_0 \\sin(\\theta)}{g} = \\frac{v_0^2 \\sin(2\\theta)}{g} ] Dependence on Parameters Angle of Projection ( \\( \\theta \\) ) : The range is maximized when \\( \\theta = 45^\\circ \\) because \\( \\sin(2\\theta) \\) reaches its maximum value of 1. Initial Velocity ( \\( v_0 \\) ) : The range increases with the square of the initial velocity. Gravitational Acceleration ( \\( g \\) ) : The range decreases as \\( g \\) increases. 3. Practical Applications Real-World Scenarios Sports : The trajectory of a soccer ball or a golf ball can be modeled using projectile motion. Engineering : The design of rockets and missiles involves understanding projectile motion. Astrophysics : The motion of celestial bodies can sometimes be approximated using projectile motion. Extensions Uneven Terrain : The model can be extended to account for varying launch and landing heights. Air Resistance : Incorporating drag forces can make the model more realistic. 4. Implementation Python Simulation Below is a Python script to simulate projectile motion and visualize the range as a function of the angle of projection. ```python import numpy as np import matplotlib.pyplot as plt Constants g = 9.81 # gravitational acceleration (m/s^2) v0 = 30 # initial velocity (m/s) angles = np.linspace(0, 90, 100) # angles from 0 to 90 degrees Function to calculate range def calculate_range(v0, theta, g): theta_rad = np.deg2rad(theta) return (v0**2 * np.sin(2 * theta_rad)) / g Calculate ranges ranges = [calculate_range(v0, angle, g) for angle in angles] Plotting plt.figure(figsize=(10, 6)) plt.plot(angles, ranges, label=f'v0 = {v0} m/s') plt.xlabel('Angle of Projection (degrees)') plt.ylabel('Range (m)') plt.title('Range vs Angle of Projection') plt.legend() plt.grid(True) plt.show()","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#governing-equations-of-motion","text":"The motion of a projectile can be described by the following differential equations derived from Newton's second law: Horizontal Motion (x-direction): [ \\frac{d^2x}{dt^2} = 0 ] This implies that the horizontal velocity \\( v_x \\) is constant: [ v_x = v_0 \\cos(\\theta) ] where \\( v_0 \\) is the initial velocity and \\( \\theta \\) is the angle of projection. Vertical Motion (y-direction): [ \\frac{d^2y}{dt^2} = -g ] where \\( g \\) is the acceleration due to gravity. The vertical velocity \\( v_y \\) is given by: [ v_y = v_0 \\sin(\\theta) - gt ] The position of the projectile as a function of time \\( t \\) is: [ x(t) = v_0 \\cos(\\theta) \\cdot t ] [ y(t) = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2}gt^2 ]","title":"Governing Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#family-of-solutions","text":"The solutions to these equations depend on the initial conditions: - Initial Velocity ( \\( v_0 \\) ) : Affects the magnitude of the velocity components. - Angle of Projection ( \\( \\theta \\) ) : Determines the direction of the initial velocity. - Gravitational Acceleration ( \\( g \\) ) : Influences the vertical motion. Varying these parameters leads to a family of parabolic trajectories.","title":"Family of Solutions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#horizontal-range","text":"The horizontal range \\( R \\) is the distance the projectile travels before hitting the ground. It can be derived by setting \\( y(t) = 0 \\) and solving for \\( t \\) : [ 0 = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2}gt^2 ] [ t = \\frac{2v_0 \\sin(\\theta)}{g} ] Substituting this into the equation for \\( x(t) \\) : [ R = v_0 \\cos(\\theta) \\cdot \\frac{2v_0 \\sin(\\theta)}{g} = \\frac{v_0^2 \\sin(2\\theta)}{g} ]","title":"Horizontal Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#dependence-on-parameters","text":"Angle of Projection ( \\( \\theta \\) ) : The range is maximized when \\( \\theta = 45^\\circ \\) because \\( \\sin(2\\theta) \\) reaches its maximum value of 1. Initial Velocity ( \\( v_0 \\) ) : The range increases with the square of the initial velocity. Gravitational Acceleration ( \\( g \\) ) : The range decreases as \\( g \\) increases.","title":"Dependence on Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#real-world-scenarios","text":"Sports : The trajectory of a soccer ball or a golf ball can be modeled using projectile motion. Engineering : The design of rockets and missiles involves understanding projectile motion. Astrophysics : The motion of celestial bodies can sometimes be approximated using projectile motion.","title":"Real-World Scenarios"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#extensions","text":"Uneven Terrain : The model can be extended to account for varying launch and landing heights. Air Resistance : Incorporating drag forces can make the model more realistic.","title":"Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation","text":"","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#python-simulation","text":"Below is a Python script to simulate projectile motion and visualize the range as a function of the angle of projection. ```python import numpy as np import matplotlib.pyplot as plt","title":"Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#constants","text":"g = 9.81 # gravitational acceleration (m/s^2) v0 = 30 # initial velocity (m/s) angles = np.linspace(0, 90, 100) # angles from 0 to 90 degrees","title":"Constants"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#function-to-calculate-range","text":"def calculate_range(v0, theta, g): theta_rad = np.deg2rad(theta) return (v0**2 * np.sin(2 * theta_rad)) / g","title":"Function to calculate range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#calculate-ranges","text":"ranges = [calculate_range(v0, angle, g) for angle in angles]","title":"Calculate ranges"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#plotting","text":"plt.figure(figsize=(10, 6)) plt.plot(angles, ranges, label=f'v0 = {v0} m/s') plt.xlabel('Angle of Projection (degrees)') plt.ylabel('Range (m)') plt.title('Range vs Angle of Projection') plt.legend() plt.grid(True) plt.show()","title":"Plotting"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Investigating the Dynamics of a Forced Damped Pendulum Motivation The forced damped pendulum is a captivating example of a physical system exhibiting intricate behavior due to the interplay of damping, restoring forces, and external periodic forces. By introducing damping and external forcing, the system transitions from simple harmonic motion to a rich spectrum of dynamics, including resonance, chaos, and quasiperiodic behavior. These phenomena provide insights into real-world systems, such as driven oscillators, climate models, and mechanical structures under periodic stress. Adding forcing introduces new parameters, such as the amplitude and frequency of the external force, which significantly affect the pendulum's behavior. Systematic variations in these parameters reveal synchronized oscillations, chaotic motion, and resonance phenomena. These behaviors highlight fundamental physics principles and provide engineering insights into energy harvesting, vibration isolation, and mechanical resonance. Task 1. Theoretical Foundation Governing Equation The motion of a forced damped pendulum is described by the differential equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin \\theta = F_0 \\cos(\\omega t) \\] where: - \\(\\theta\\) is the angular displacement, - \\(\\gamma\\) is the damping coefficient, - \\(\\omega_0\\) is the natural frequency, - \\(F_0\\) is the amplitude of the external force, - \\(\\omega\\) is the driving frequency. Approximate Solutions for Small-Angle Oscillations For small angles ( \\(\\theta \\approx \\sin\\theta\\) ), the equation simplifies to: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = F_0 \\cos(\\omega t) \\] Solving this using standard techniques yields solutions representing driven damped harmonic oscillations. Resonance Conditions Resonance occurs when the driving frequency \\(\\omega\\) matches the system\u2019s natural frequency \\(\\omega_0\\) , leading to energy amplification. The impact of damping on resonance behavior and its practical implications in engineering are discussed. 2. Analysis of Dynamics Influence of the damping coefficient, driving amplitude, and frequency on motion. Transition from periodic to chaotic motion. Physical interpretations of regular and chaotic motion, explored via phase portraits and bifurcation diagrams. 3. Practical Applications Energy Harvesting : Mechanical resonance in energy collection devices. Suspension Bridges : Understanding resonance-induced structural failures. Oscillating Circuits : Analogies to driven RLC circuits. 4. Implementation Computational Model Using Python, we numerically solve the forced damped pendulum equation using the Runge-Kutta method and visualize the results. import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Define the forced damped pendulum equation def forced_damped_pendulum(t, y, gamma, omega0, F0, omega): theta, omega_t = y dydt = [ omega_t, -gamma * omega_t - omega0**2 * np.sin(theta) + F0 * np.cos(omega * t) ] return dydt # Parameters gamma = 0.2 # Damping coefficient omega0 = 1.0 # Natural frequency F0 = 0.5 # Driving force amplitude omega = 0.8 # Driving frequency time_span = (0, 50) # Simulation time initial_conditions = [0.1, 0] # Initial theta and angular velocity time_eval = np.linspace(*time_span, 1000) # Solve the differential equation solution = solve_ivp( forced_damped_pendulum, time_span, initial_conditions, t_eval=time_eval, args=(gamma, omega0, F0, omega) ) # Plot the results plt.figure(figsize=(10, 5)) plt.plot(solution.t, solution.y[0], label=\"Theta (rad)\") plt.xlabel(\"Time (s)\") plt.ylabel(\"Angular Displacement (rad)\") plt.title(\"Forced Damped Pendulum Motion\") plt.legend() plt.grid() plt.show() Visualization Time evolution of \\(\\theta(t)\\) for different parameters. Phase diagrams illustrating different motion regimes. Poincar\u00e9 sections and bifurcation diagrams to explore chaotic behavior. Deliverables Markdown document with explanations and Python implementations. Graphical representations of motion under varying conditions. Discussion on model limitations and potential extensions, such as nonlinear damping and non-periodic driving forces. Phase portraits and bifurcation diagrams for understanding transitions to complex dynamics. Hints and Resources Use small-angle approximations where valid. Apply numerical techniques (Runge-Kutta) for beyond-small-angle exploration. Relate the pendulum dynamics to driven RLC circuits and biomechanics. Utilize Python for simulations and visualizations. This study bridges theoretical analysis and computational exploration, fostering a deeper understanding of forced and damped oscillatory phenomena in physics and engineering.","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#motivation","text":"The forced damped pendulum is a captivating example of a physical system exhibiting intricate behavior due to the interplay of damping, restoring forces, and external periodic forces. By introducing damping and external forcing, the system transitions from simple harmonic motion to a rich spectrum of dynamics, including resonance, chaos, and quasiperiodic behavior. These phenomena provide insights into real-world systems, such as driven oscillators, climate models, and mechanical structures under periodic stress. Adding forcing introduces new parameters, such as the amplitude and frequency of the external force, which significantly affect the pendulum's behavior. Systematic variations in these parameters reveal synchronized oscillations, chaotic motion, and resonance phenomena. These behaviors highlight fundamental physics principles and provide engineering insights into energy harvesting, vibration isolation, and mechanical resonance.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#task","text":"","title":"Task"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#governing-equation","text":"The motion of a forced damped pendulum is described by the differential equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin \\theta = F_0 \\cos(\\omega t) \\] where: - \\(\\theta\\) is the angular displacement, - \\(\\gamma\\) is the damping coefficient, - \\(\\omega_0\\) is the natural frequency, - \\(F_0\\) is the amplitude of the external force, - \\(\\omega\\) is the driving frequency.","title":"Governing Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#approximate-solutions-for-small-angle-oscillations","text":"For small angles ( \\(\\theta \\approx \\sin\\theta\\) ), the equation simplifies to: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = F_0 \\cos(\\omega t) \\] Solving this using standard techniques yields solutions representing driven damped harmonic oscillations.","title":"Approximate Solutions for Small-Angle Oscillations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance-conditions","text":"Resonance occurs when the driving frequency \\(\\omega\\) matches the system\u2019s natural frequency \\(\\omega_0\\) , leading to energy amplification. The impact of damping on resonance behavior and its practical implications in engineering are discussed.","title":"Resonance Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"Influence of the damping coefficient, driving amplitude, and frequency on motion. Transition from periodic to chaotic motion. Physical interpretations of regular and chaotic motion, explored via phase portraits and bifurcation diagrams.","title":"2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"Energy Harvesting : Mechanical resonance in energy collection devices. Suspension Bridges : Understanding resonance-induced structural failures. Oscillating Circuits : Analogies to driven RLC circuits.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-implementation","text":"","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#computational-model","text":"Using Python, we numerically solve the forced damped pendulum equation using the Runge-Kutta method and visualize the results. import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Define the forced damped pendulum equation def forced_damped_pendulum(t, y, gamma, omega0, F0, omega): theta, omega_t = y dydt = [ omega_t, -gamma * omega_t - omega0**2 * np.sin(theta) + F0 * np.cos(omega * t) ] return dydt # Parameters gamma = 0.2 # Damping coefficient omega0 = 1.0 # Natural frequency F0 = 0.5 # Driving force amplitude omega = 0.8 # Driving frequency time_span = (0, 50) # Simulation time initial_conditions = [0.1, 0] # Initial theta and angular velocity time_eval = np.linspace(*time_span, 1000) # Solve the differential equation solution = solve_ivp( forced_damped_pendulum, time_span, initial_conditions, t_eval=time_eval, args=(gamma, omega0, F0, omega) ) # Plot the results plt.figure(figsize=(10, 5)) plt.plot(solution.t, solution.y[0], label=\"Theta (rad)\") plt.xlabel(\"Time (s)\") plt.ylabel(\"Angular Displacement (rad)\") plt.title(\"Forced Damped Pendulum Motion\") plt.legend() plt.grid() plt.show()","title":"Computational Model"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#visualization","text":"Time evolution of \\(\\theta(t)\\) for different parameters. Phase diagrams illustrating different motion regimes. Poincar\u00e9 sections and bifurcation diagrams to explore chaotic behavior.","title":"Visualization"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#deliverables","text":"Markdown document with explanations and Python implementations. Graphical representations of motion under varying conditions. Discussion on model limitations and potential extensions, such as nonlinear damping and non-periodic driving forces. Phase portraits and bifurcation diagrams for understanding transitions to complex dynamics.","title":"Deliverables"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#hints-and-resources","text":"Use small-angle approximations where valid. Apply numerical techniques (Runge-Kutta) for beyond-small-angle exploration. Relate the pendulum dynamics to driven RLC circuits and biomechanics. Utilize Python for simulations and visualizations. This study bridges theoretical analysis and computational exploration, fostering a deeper understanding of forced and damped oscillatory phenomena in physics and engineering.","title":"Hints and Resources"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}